{ 
    description = "Utah Tech FPS Experiment 1"; 
    allowUserAdd = True;
    pretrialDuration = 0;
    referenceTargetSize = 0.05;
    
    weapon = {
        id = "oneShot";
        firePeriod = 0.05;
        damagePerSecond = 21.0;
        autoFire = False;
        renderDecals = True;
    };
    // Show weapon cooldown ring
    //showHUD = true;
    //renderWeaponStatus = True;
    //cooldownMode = "ring";

    scene = {
        name = "UTech Hide Seek";
    };

    sessions = (

        {
            // X targets 1 wall - for warm up and testing
            description = "oneHitCluster trials";
            frameRate = 60;
            maxTrialDuration = 30;
            id = "oneHitCluster";

            // Showing timer and progress
            showHUD = True;
            showBanner = True;
            bannerTimerMode = "remaining";
            showPreviewTargetsWithReference = True;

            blockCount = 5;
            trials = ( 
                { 
                    // count = 15; 
                    targetIds = ( "staticFrontWall", "staticFrontWall", "staticFrontWall", "staticFrontWall", "staticFrontWall", "staticFrontWall", "staticFrontWall", "staticFrontWall" ); 
                },
            ); 
        },
        {
            // X targets 1 wall - for warm up and testing
            description = "oneHitGoNoGo trials";
            frameRate = 60;
            maxTrialDuration = 1.5;
            trialFeedbackDuration = 0.5;
            id = "oneHitGoNoGo";
            referenceTargetInitialFeedback = "Click on the target, only if it is green. Avoid clicking on red targets!\nClick the blue target to start.";
            referenceTargetColor = Color3(0,0,1);


            // Showing timer and progress
            showHUD = True;
            showBanner = True;
            bannerTimerMode = "remaining";
            showPreviewTargetsWithReference = True;

            blockCount = 5;
            randomizeTaskOrder = True;
            tasks = (
                {
                    id = "go";
                    count = 7; 
                    trialOrders = [
                        {
                            order = ["go"];
                        },
                    ];
                },
                {
                    id = "nogo";
                    count = 3; 
                    trialOrders = [
                        {
                            order = ["nogo"];
                        },
                    ];
                },
            );
            trials = ( 
                { 
                    id = "go";
                    targetIds = ( "staticFrontWallGo" ); 
                    // trialSuccessFeedback: "%trialTaskTimeMs ms!",
                    trialSuccessFeedback: "Success!",
                    trialFailureFeedback: "Failure!",
                },
                { 
                    id = "nogo";
                    targetIds = ( "staticFrontWallNoGo" ); 
                    trialSuccessFeedback: "Failure!",
                    trialFailureFeedback: "Success!",
                },

            ); 
        },
        {
            // X targets 1 wall - for warm up and testing
            description = "reaction trials";
            frameRate = 60;
            id = "reaction";
            showReferenceTarget = False;
            referenceTargetSize = 1;
            // These don't seem to work
            // showPreviewTargetsWithReference = True;
            // previewTargetColor = Color3(.4, .4, .8);

            // pretrial duration is a randomized truncated exponential distribution
            pretrialDuration = 0.5;
            pretrialDurationRange = [0.2, 1.5];
            maxTrialDuration = 3;
            // skip task and trial feedback for now
            trialFeedbackDuration = 0;
            taskFeedbackDuration = 0;

            // zoom in and disable movement
            horizontalFieldOfView = .05;
            turnScale = Vector2(0, 0);
            moveRate = 0.0;
            jumpVelocity = 0.0;
            
            // There are blockCount blocks of count trials each
            blockCount = 5;
            trials = ( 
                { 
                    count = 15; 
                    targetIds = ( "reaction" ); 
                },
            ); 
        },
        {
            // Fun session -- wander and find targets around the map
            description = "findTargets trials";
            frameRate = 60; 
            maxTrialDuration = 120;
            id = "findTargets";
            
            // allow movement in this one
            moveRate = 5.0;
            jumpVelocity = 2.5;
            playerGravity = Vector3(0.0, -9.81, 0.0);
            
            // Showing timer and progress
            showHUD = True;
            showBanner = True;
            bannerTimerMode = "remaining";

            // There are blockCount blocks of count trials each
            // blockCount = 4;
            tasks = (
                {
                    id = "wander";
                    trialOrders = [
                        {
                            order = ["8 targets"];
                        },
                    ];
                    questions = [ {
                        prompt = "How well did you think you did this round? (1 = bad, 5 = good)";
                        type = "Rating";
                        randomOrder = false;
                        options = ["1", "2", "3", "4", "5"];
                    } ];
                },
            );
            trials = (
                {
                    id = "8 targets";
                    targetIds = ("respawn", "respawn", "respawn", "respawn", "respawn_move", "respawn_move", "respawn_move", "respawn_move" );
                },
            );
        }
    
    ); 

    targets = ( 
        {
            id: "staticFrontWall",
            destSpace = "world";
            visualSize = [ 0.275, 0.275 ];
            colors = [Color3(0,1,0), Color3(0,1,0)];
            speed: [ 0, 0 ],
            spawnBounds = AABox {
                Point3(19.0, 1.0, 6.0),
                Point3(19.0, 3.0, 14.0),
            };
            moveBounds = AABox {
                Point3(19.0, 1.0, 1.0),
                Point3(19.0, 3.0, 19.0),
            };
            jumpEnabled: false,
            respawnCount = -1;
        },
        {
            id: "staticFrontWallGo",
            destSpace = "world";
            visualSize = [ 0.275, 0.275 ];
            colors = [Color3(0,1,0), Color3(0,1,0)];
            speed: [ 0, 0 ],
            spawnBounds = AABox {
                Point3(19.0, 1.0, 6.0),
                Point3(19.0, 3.0, 14.0),
            };
            moveBounds = AABox {
                Point3(19.0, 1.0, 1.0),
                Point3(19.0, 3.0, 19.0),
            };
            jumpEnabled: false,
        },
        {
            id: "staticFrontWallNoGo",
            destSpace = "world";
            visualSize = [ 0.275, 0.275 ];
            colors = [Color3(1,0,0), Color3(1,0,0)];
            speed: [ 0, 0 ],
            spawnBounds = AABox {
                Point3(19.0, 1.0, 6.0),
                Point3(19.0, 3.0, 14.0),
            };
            moveBounds = AABox {
                Point3(19.0, 1.0, 1.0),
                Point3(19.0, 3.0, 19.0),
            };
            jumpEnabled: false,
        },
        {
            id: "static1",
            destSpace = "world";
            visualSize = [ 0.275, 0.275 ];
            speed: [ 0, 0 ],
            spawnBounds = AABox {
                Point3(1.0, 1.0, 1.0),
                Point3(1.0, 3.0, 19.0),
            };
            moveBounds = AABox {
                Point3(1.0, 1.0, 1.0),
                Point3(1.0, 3.0, 19.0),
            };
            jumpEnabled: false,
        },
        {
            id: "static2",
            destSpace = "world";
            visualSize = [ 0.275, 0.275 ];
            speed: [ 0, 0 ],
            spawnBounds = AABox {
                Point3(1.0, 1.0, 19.0),
                Point3(19.0, 3.0, 19.0),
            };
            moveBounds = AABox {
                Point3(1.0, 1.0, 19.0),
                Point3(19.0, 3.0, 19.0),
            };
            jumpEnabled: false,
        },
        {
            id: "static3",
            destSpace = "world";
            visualSize = [ 0.275, 0.275 ];
            speed: [ 0, 0 ],
            spawnBounds = AABox {
                Point3(19.0, 1.0, 1.0),
                Point3(19.0, 3.0, 19.0),
            };
            moveBounds = AABox {
                Point3(19.0, 1.0, 1.0),
                Point3(19.0, 3.0, 19.0),
            };
            jumpEnabled: false,
        },
        {
            id: "static4",
            destSpace = "world";
            visualSize = [ 0.275, 0.275 ];
            speed: [ 0, 0 ],
            spawnBounds = AABox {
                Point3(1.0, 1.0, 1.0),
                Point3(19.0, 3.0, 1.0),
            };
            moveBounds = AABox {
                Point3(1.0, 1.0, 1.0),
                Point3(19.0, 3.0, 1.0),
            };
            jumpEnabled: false,
        },
        {
            id: "respawn",
            destSpace = "world";
            visualSize = [ 0.275, 0.275 ];
            speed: [ 0, 0 ],
            spawnBounds = AABox {
                Point3(1.0, 1.0, 1.0),
                Point3(19.0, 3.0, 19.0),
            };
            moveBounds = AABox {
                Point3(1.0, 1.0, 1.0),
                Point3(19.0, 3.0, 19.0),
            };
            jumpEnabled: false,
            respawnCount = -1;
        },
        {
            id: "respawn_move",
            destSpace = "world";
            visualSize = [ 0.275, 0.275 ];
            speed: [ 2, 2 ],
            spawnBounds = AABox {
                Point3(1.0, 1.0, 1.0),
                Point3(19.0, 3.0, 19.0),
            };
            moveBounds = AABox {
                Point3(1.0, 1.0, 1.0),
                Point3(19.0, 3.0, 19.0),
            };
            jumpEnabled: false,
            respawnCount = -1;
        },
        {
            // This one is the small size
            id: "static_small",
            destSpace = "world";
            visualSize = [ 0.075, 0.075 ];
            speed: [ 0, 0 ],
            spawnBounds = AABox {
                Point3(1.0, 1.0, 1.0),
                Point3(1.0, 4.0, 19.0),
            };
            moveBounds = AABox {
                Point3(1.0, 1.0, 1.0),
                Point3(1.0, 4.0, 19.0),
            };
            jumpEnabled: false,
        },
        {
            // Large target, but we zoom in the camera on it anyway
            id: "reaction",
            destSpace = "world";
            visualSize = [ 2, 2 ];
            speed: [ 0, 0 ],
            spawnBounds = AABox {
                Point3(19.0, 2.0, 10.0),
                Point3(19.0, 2.0, 10.0),
            };
            moveBounds = AABox {
                Point3(19.0, 2.0, 10.0),
                Point3(19.0, 2.0, 10.0),
            };
            jumpEnabled: false,
        },
    ); 
}
